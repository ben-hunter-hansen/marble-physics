{"version":3,"sources":["webpack:///webpack/bootstrap 0d3ab1af8f71dc59d005","webpack:///./src/Main.ts","webpack:///./src/Engine/Engine.ts","webpack:///./src/Engine/Camera.ts","webpack:///./src/Config/Viewport.ts","webpack:///./src/Engine/Ground.ts","webpack:///./src/Engine/Lighting.ts","webpack:///./src/Engine/Skybox.ts","webpack:///./src/Util/TextureLoader.ts","webpack:///./src/Config/Assets.ts","webpack:///./src/World/World.ts","webpack:///./src/World/Marble.ts"],"names":[],"mappings":"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","file":"./build/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0d3ab1af8f71dc59d005\n **/","import { Engine } from \"./Engine/Engine\";\nimport { Viewport } from \"./Config/Viewport\";\n\nfunction main(): void {\n    \n    // Create rendering context and attach it to the document\n    let renderer = new THREE.WebGLRenderer({antialias: true});\n    renderer.setSize(Viewport.SCREEN_WIDTH, Viewport.SCREEN_HEIGHT);\n    document.body.appendChild( renderer.domElement );\n    \n    // Initialize game engine\n    const engine = new Engine(renderer, new THREE.Scene());\n    \n    // Turn on the lights\n    engine.lightsOn();\n    \n    // Carry out async initializations,\n    // then begin the game loop/\n    engine.drawGroud()\n    .then(engine => engine.drawSkybox())\n    .then(engine => engine.createWorld())\n    .then(engine => engine.start()); \n}\n\n\nmain();\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main.ts\n **/","import { Camera } from \"./Camera\";\nimport { Ground } from \"./Ground\";\nimport { Lighting } from \"./Lighting\";\nimport { Skybox } from \"./Skybox\";\nimport { TextureLoader } from \"../Util/TextureLoader\";\nimport { Assets } from \"../Config/Assets\";\nimport { World } from \"../World/World\";\n\nexport class Engine {\n    \n    private renderer: THREE.WebGLRenderer;\n    private scene: THREE.Scene;\n    private camera: THREE.Camera;\n    \n    constructor(renderer: THREE.WebGLRenderer, scene: THREE.Scene) {\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = Camera.create();\n        \n        this.scene.add(this.camera);\n        this.camera.lookAt(this.scene.position);\n    }\n    \n    lightsOn(): void {\n        Lighting.initCamLight(this.scene);\n    }\n    \n    drawGroud(): Promise<Engine> {\n        return new Promise((resolve, reject) => {\n            const texLoader = new TextureLoader();\n            texLoader.load(Assets.FLOOR_TEXTURE).then((texture) => {\n                Ground.init(texture, this.scene);\n                resolve(this);\n            });\n        });\n    }\n    \n    drawSkybox(): Promise<Engine> {\n        Skybox.init(this.scene);\n        \n        // This will be async at some point\n        return Promise.resolve(this);\n    }\n    \n    createWorld(): Promise<Engine> {\n        const world = new World(this.scene);\n        world.init();\n        \n        // This will be async at some point\n        return Promise.resolve(this);\n    }\n    \n    render(): void {\n        this.renderer.render(this.scene, this.camera);\n    }\n    \n    animate(): void {\n        requestAnimationFrame(() => this.animate());\n        this.render();\n    }\n    \n    start(): void {\n        this.animate();\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Engine/Engine.ts\n **/","import { Viewport } from \"../Config/Viewport\";\n\nexport class Camera {\n    static create(): THREE.PerspectiveCamera {\n        let cam = new THREE.PerspectiveCamera(\n            Viewport.FOV,\n            Viewport.ASPECT_RATIO,\n            Viewport.NEAR,\n            Viewport.FAR  \n        );\n    \n        cam.position.set(0,150,400);\n        return cam;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Engine/Camera.ts\n **/","const Viewport = {\n    SCREEN_WIDTH: window.innerWidth,\n    SCREEN_HEIGHT: window.innerHeight,\n    FOV: 45,\n    ASPECT_RATIO: window.innerWidth / window.innerHeight,\n    NEAR: 0.1,\n    FAR: 1000\n}\n\nexport { Viewport };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Config/Viewport.ts\n **/","\n\nexport class Ground {\n\n    static init(tex: THREE.Texture, scene: THREE.Scene) {\n        tex.wrapS = tex.wrapT = THREE.RepeatWrapping; \n        tex.repeat.set( 10, 10 );\n        let floorMaterial = new THREE.MeshBasicMaterial( { map: tex, side: THREE.DoubleSide } );\n        let floorGeometry = new THREE.PlaneGeometry(1000, 1000, 10, 10);\n        let floor = new THREE.Mesh(floorGeometry, floorMaterial);\n        \n        floor.position.y = -0.5;\n        floor.rotation.x = Math.PI / 2;\n        scene.add(floor);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Engine/Ground.ts\n **/","export class Lighting {\n    \n    static initCamLight(scene: THREE.Scene) {\n        let light = new THREE.PointLight(0xffffff);\n        light.position.set(100,250,100);\n        scene.add(light);\n    }\n    \n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Engine/Lighting.ts\n **/","export class Skybox {\n    \n    static init(scene: THREE.Scene) {\n        let skyBoxGeometry = new THREE.CubeGeometry( 1000, 1000, 1000 );\n\t    let skyBoxMaterial = new THREE.MeshBasicMaterial( { color: 0x9999ff, side: THREE.BackSide } );\n\t    let skyBox = new THREE.Mesh( skyBoxGeometry, skyBoxMaterial );\n        \n        scene.add(skyBox);\n    } \n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Engine/Skybox.ts\n **/","import { IAssetLoader } from \"./IAssetLoader\";\n\nexport class TextureLoader implements IAssetLoader<THREE.Texture> {\n    constructor() {}\n    \n    load(url: string): Promise<THREE.Texture> {\n        let loader = new THREE.TextureLoader();\n        return Promise.resolve(loader.load(url));\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Util/TextureLoader.ts\n **/","const Assets = {\n    FLOOR_TEXTURE: 'assets/grasslight-big.jpg'\n};\n\nexport { Assets };\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Config/Assets.ts\n **/","import { Marble } from \"./Marble\";\n\nexport class World {\n    private scene: THREE.Scene;\n    constructor(scene: THREE.Scene) {\n        this.scene = scene;\n    }\n    \n    init(): void {\n        this.scene.add(Marble.createMesh());\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/World/World.ts\n **/","export class Marble {\n    static createMesh(): THREE.Mesh {\n        let geometry = new THREE.SphereGeometry( 30, 32, 16 );\n        let material = new THREE.MeshLambertMaterial( { color: 0x000088 } );\n        let mesh = new THREE.Mesh( geometry, material );\n        mesh.position.set(0,40,0);\n        return mesh;\n    }  \n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/World/Marble.ts\n **/"],"sourceRoot":""}